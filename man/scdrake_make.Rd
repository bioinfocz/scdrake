% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.R
\name{scdrake_make}
\alias{scdrake_make}
\alias{scdrake_r_make}
\title{Execute a \code{scdrake}'s pipeline plan.}
\usage{
scdrake_make(
  plan,
  cfg_pipeline = NULL,
  cfg_main = NULL,
  verbose = getOption("scdrake_verbose"),
  prework = "",
  log_worker = TRUE,
  options = list(),
  ...
)

scdrake_r_make(drake_file = NULL, ...)
}
\arguments{
\item{plan}{A \code{drake} plan.}

\item{cfg_pipeline}{One of:
\itemize{
\item A \code{scdrake_list} object: pipeline config (see \code{\link[=load_pipeline_config]{load_pipeline_config()}}) obtained from \code{pipeline.yaml} file located
in a pipeline config directory
\item \code{NULL}: the config will be loaded using the path defined in the \code{scdrake_pipeline_config_dir} option
}}

\item{cfg_main}{A \code{scdrake_list} object: main config (see \link{load_config})
obtained from \verb{00_main.yaml} file located in single-sample or integration config directory.}

\item{verbose}{A logical scalar: if \code{TRUE}, be verbose.
The default value is obtained from \code{getOption("scdrake_verbose")}.}

\item{prework, log_worker, ...}{Passed to \code{\link[drake:make]{drake::make()}}. \code{prework} must be a character scalar.}

\item{options}{A list: additional \code{\link[base:options]{base::options()}} to be set (locally).}

\item{drake_file}{A character scalar: path to \verb{_drake.R} (default for \code{NULL}) or similar file
(\href{https://books.ropensci.org/drake/projects.html#safer-interactivity}{details}).}
}
\value{
Invisibly \code{TRUE} if plan execution finishes without errors.
}
\description{
This is a wrapper around \code{\link[drake:make]{drake::make()}} with some sensible defaults.
Before a plan is executed, this function sets \emph{locally} some options, environment variables and other things.
That means no side effects are left. Note that this is a less reproducible way to run
the \code{scdrake} pipeline since it is executed in the current R session.
Also note that \code{\link[=create_single_sample_dirs]{create_single_sample_dirs()}} or \code{\link[=create_integration_dirs]{create_integration_dirs()}} must be run before.

The preferred way is calling the \code{\link[=scdrake_r_make]{scdrake_r_make()}} function,
which is a wrapper around \code{\link[drake:r_make]{drake::r_make()}}
(\href{https://books.ropensci.org/drake/projects.html#safer-interactivity}{details}).
It will start a fresh new R session, source \verb{_drake.R} (or a similar file) and execute the plan.
The current \verb{_drake.R}-like files copied when a new \code{scdrake} project is initialized are:
\itemize{
\item \verb{_drake_single_sample.R} for the single-sample pipeline
\item \verb{_drake_integration.R} for the integration pipeline
}

Internally, \verb{_drake_single_sample.R} and \verb{_drake_integration.R} do almost the same as code in \code{\link[=scdrake_make]{scdrake_make()}},
except there is no need for isolation of side effects. Also, by default, it relies on environment variables,
such as paths to config directories, e.g. \code{SCDRAKE_SINGLE_SAMPLE_CONFIG_DIR} whose value is used as the default for
option used in \code{load_single_sample_configs(dir = getOption("scdrake_single_sample_config_dir"))}.
}
\concept{scdrake_make}
