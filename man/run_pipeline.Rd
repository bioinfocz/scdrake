% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run_single_sample}
\alias{run_single_sample}
\alias{run_integration}
\title{A shortcut to run the \code{scdrake} pipeline in the current R session.}
\usage{
run_single_sample(
  pipeline_config_dir = getOption("scdrake_pipeline_config_dir"),
  single_sample_config_dir = getOption("scdrake_single_sample_config_dir"),
  do_update_configs = TRUE,
  verbose = getOption("scdrake_verbose"),
  .dry = FALSE,
  ...
)

run_integration(
  pipeline_config_dir = getOption("scdrake_pipeline_config_dir"),
  integration_config_dir = getOption("scdrake_integration_config_dir"),
  do_update_configs = TRUE,
  verbose = getOption("scdrake_verbose"),
  .dry = FALSE,
  ...
)
}
\arguments{
\item{pipeline_config_dir}{A character scalar: path to directory with pipeline config file (\code{pipeline.yaml}).}

\item{single_sample_config_dir}{A character scalar: path to directory with \verb{00_main.yaml}, \verb{01_input_qc.yaml},
\verb{02_norm_clustering.yaml}, \code{cluster_markers.yaml}, and \code{contrasts.yaml} files.}

\item{do_update_configs}{A logical scalar: if \code{TRUE}, run \code{\link[=update_single_sample_configs]{update_single_sample_configs()}} or
\code{\link[=update_integration_configs]{update_integration_configs()}} before loading configs.}

\item{verbose}{A logical scalar: if \code{TRUE}, be verbose.
The default value is obtained from \code{getOption("scdrake_verbose")}.}

\item{.dry}{A logical scalar: if \code{TRUE}, omit the last step in the description and just return \code{TRUE}.}

\item{...}{Passed to \code{\link[=scdrake_make]{scdrake_make()}}.}

\item{integration_config_dir}{A character scalar: path to directory with \verb{00_main.yaml}, \verb{01_integration.yaml},
\verb{02_int_clustering.yaml}, \code{cluster_markers.yaml}, and \code{contrasts.yaml} files.}
}
\value{
\code{TRUE} if pipeline finishes successfully.
}
\description{
This is a shortcut for:
\itemize{
\item Loading configs: \code{\link[=load_pipeline_config]{load_pipeline_config()}}, and \code{\link[=load_single_sample_configs]{load_single_sample_configs()}} or \code{\link[=load_integration_configs]{load_integration_configs()}}.
\item Obtaining the pipeline plan: \code{\link[=get_single_sample_plan]{get_single_sample_plan()}} or \code{\link[=get_integration_plan]{get_integration_plan()}}.
\item Creating a basic directory structure (based on paths loaded from config files): \code{\link[=create_single_sample_dirs]{create_single_sample_dirs()}} or
\code{\link[=create_integration_dirs]{create_integration_dirs()}}.
\item Running the pipeline: \code{\link[=scdrake_make]{scdrake_make()}}.
}

Note that this is not a recommended way to run the pipeline. Instead, you should run \code{\link[drake:r_make]{drake::r_make()}} with
\code{source} parameter of \code{"_drake_single_sample.R"} or \code{"_drake_integration.R"}. See \code{\link[=scdrake_r_make]{scdrake_r_make()}} for more details.
}
\concept{run_pipeline}
