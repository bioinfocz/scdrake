% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_sample_norm_clustering.R
\name{sce_norm_fn}
\alias{sce_norm_fn}
\alias{scran_normalization}
\alias{sctransform_normalization}
\title{Normalize counts either by \code{scran} or \code{sctransform}.}
\usage{
sce_norm_fn(sce_cc, norm_type = c("scran", "sctransform", "none"), ...)

scran_normalization(
  sce,
  use_quickcluster = TRUE,
  quickcluster_method = c("igraph", "hclust"),
  BSPARAM = BiocSingular::IrlbaParam(),
  BPPARAM = BiocParallel::SerialParam(),
  ...
)

sctransform_normalization(
  sce,
  vars_to_regress = NULL,
  n_hvg = nrow(sce),
  method = "glmGamPoi",
  seed = 1L,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{sce_cc}{(\emph{input target}) A \code{SingleCellExperiment} object.}

\item{norm_type}{A character scalar: type of normalization.}

\item{...}{Passed to \code{\link[=scran_normalization]{scran_normalization()}} or \code{\link[=sctransform_normalization]{sctransform_normalization()}}.}

\item{sce}{A \code{SingleCellExperiment} object.}

\item{use_quickcluster}{A logical scalar: if \code{TRUE}, do \code{\link[scran:quickCluster]{scran::quickCluster()}} prior to normalization.}

\item{quickcluster_method}{A character scalar: clustering method:
\itemize{
\item \code{"igraph"} uses graph-based clustering
\item \code{"hclust"} uses hierarchical clustering
}

See \code{?scran::quickCluster} for more details.}

\item{BSPARAM}{A \link[BiocSingular:BiocSingularParam]{BiocSingular::BiocSingularParam} object.}

\item{BPPARAM}{A \link[BiocParallel:BiocParallelParam-class]{BiocParallel::BiocParallelParam} object.}

\item{vars_to_regress}{A list of character scalars: which variables to regress out during normalization.
Passed to \code{\link[Seurat:SCTransform]{Seurat::SCTransform()}}.}

\item{n_hvg}{An integer scalar: number of HVGs to take. Passed to \code{\link[Seurat:SCTransform]{Seurat::SCTransform()}}.}

\item{method}{A character scalar: passed to \code{\link[Seurat:SCTransform]{Seurat::SCTransform()}}.}

\item{seed}{An integer scalar: passed to \code{\link[Seurat:SCTransform]{Seurat::SCTransform()}}.}

\item{verbose}{A logical scalar: passed to \code{\link[Seurat:SCTransform]{Seurat::SCTransform()}}.}
}
\value{
A \code{SingleCellExperiment} object. \code{normalization_type = norm_type} is appended to \code{metadata()} of the returned
\code{SingleCellExperiment} object. \emph{Output target}: \code{sce_norm}

The following items are added to \code{metadata()} of the returned \code{SingleCellExperiment} object:
\itemize{
\item \code{normalization_type}: value of the \code{norm_type} function argument.
\item For \code{norm_type = "sctransform"}: \code{sctransform_hvg_ids}, \code{sctransform_pearson_residuals}, \code{sctransform_vst.out},
\code{sctransform_model_list}.
}
}
\description{
Normalize counts either by \code{scran} or \code{sctransform}.
}
\section{\code{sctransform_normalization()}}{

\code{\link[Seurat:SCTransform]{Seurat::SCTransform()}} is returning counts in log1p (natural log)
scale, but these are transformed to log2.
}

\concept{single_sample_norm_clustering_fn}
