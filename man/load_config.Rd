% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config_load.R
\name{load_config}
\alias{load_config}
\alias{load_pipeline_config}
\alias{load_single_sample_configs}
\alias{load_integration_configs}
\title{Load a YAML config file as \code{scdrake_list}.}
\usage{
load_config(
  yaml_file,
  other_variables = NULL,
  eval_code = TRUE,
  verbose = getOption("scdrake_verbose")
)

load_pipeline_config(
  dir = getOption("scdrake_pipeline_config_dir"),
  process = TRUE,
  ...
)

load_single_sample_configs(
  dir = getOption("scdrake_single_sample_config_dir"),
  cfg_pipeline = NULL,
  process = TRUE,
  ...
)

load_integration_configs(
  dir = getOption("scdrake_integration_config_dir"),
  cfg_pipeline = NULL,
  process = TRUE,
  ...
)
}
\arguments{
\item{yaml_file}{A character scalar: path to YAML file.}

\item{other_variables}{A list of variables in whose environment the \code{yaml_file} will be evaluated, see details below.}

\item{eval_code}{A logical scalar: if \code{TRUE}, evaluate code for parameters in the \code{yaml_file} whose value starts with \code{!code }.}

\item{verbose}{A logical scalar: if \code{TRUE}, be verbose.
The default value is obtained from \code{getOption("scdrake_verbose")}.}

\item{dir}{A character scalar:
\itemize{
\item For \code{load_pipeline_config()}: a path to directory with \code{pipeline.yaml} file.
\item For \code{load_single_sample_config()}: a path to directory with \verb{00_main.yaml},
\verb{01_input_qc.yaml}, \verb{02_norm_clustering.yaml},
\code{cluster_markers.yaml}, and \code{contrasts.yaml} files.
\item For \code{load_integration_config()}: a path to directory with \verb{00_main.yaml},
\verb{01_integration.yaml}, \verb{02_int_clustering.yaml},
\code{cluster_markers.yaml}, and \code{contrasts.yaml} files.
}}

\item{process}{A logical scalar: if \code{TRUE}, internally process the loaded config.
This is always needed prior to sending the config to functions generating a \code{drake} plan,
but in some cases could be useful to see the raw config.}

\item{...}{Passed to \code{load_config()}.}

\item{cfg_pipeline}{A \code{scdrake_list} object: pipeline config (see \code{\link[=load_pipeline_config]{load_pipeline_config()}})
obtained from \code{pipeline.yaml} file located in pipeline config directory.
If \code{NULL}, it will be loaded using the path defined in \code{scdrake_pipeline_config_dir} option.}
}
\value{
A \code{\link[=scdrake_list]{scdrake_list()}} of parameters loaded from the YAML file, or a named list of such lists.
}
\description{
\code{load_config()} loads a single YAML file as a \code{\link[=scdrake_list]{scdrake_list()}}.

\code{load_pipeline_config()}, \code{load_single_samples_configs()}, and \code{load_integration_configs()}
load a specific config group (pipeline, single-sample, integration) and return a named list of \code{scdrake_list}s.
}
\details{
Except \code{load_pipeline_config()}, you can refer to variables from \code{pipeline.yaml} and \verb{00_main.yaml} configs
inside individual configs. For example, you can use \verb{SC3_N_CORES: !code DRAKE_N_JOBS} in \verb{02_norm_clustering.yaml}.
}
\section{Evaluating code inside YAML files}{

All parameters in the \code{yaml_file} whose value starts with \code{!code} will be evaluated as R code.
Those can reference other parameters in the \code{yaml_file}, or variables in the individual lists of the \code{other_variables} list.
Note that you cannot reference other \code{!code} parameters as their are not already evaluated during the runtime.

An example YAML file:\if{html}{\out{<div class="sourceCode yaml">}}\preformatted{VAR_1: 5
VAR_2: !code VAR_1 + 5
VAR_3: "apple"
VAR_4:
  VAR_4_1: !code str_upper(VAR_3)
VAR_5:
  - VAR_5_1:
      a: !code VAR_1 + 1
    VAR_5_2:
      b: !code 1:10
VAR_6: !code VAR_2 + 10
}\if{html}{\out{</div>}}
\itemize{
\item \code{VAR_2} will be \code{10}.
\item \code{VAR_4_1} will be \code{"APPLE"}.
\item \code{VAR_5_1} will be \code{6}.
\item \code{VAR_5_2} will be a numeric vector.
\item \code{VAR_6} will throw error, because \code{VAR_2} will still be unevaluated, so R will try to add \code{10} to the character scalar.
}

Note that \code{VAR_5} contains a single named list, and this structure is used quite often in \code{scdrake} configs.
You have to keep an eye on the proper indentation :)
}

\examples{
# If a scdrake project is in the current working directory.
\dontrun{
cfg_1 <- load_config("config/pipeline.yaml")
cfg_2 <- load_config(
  "config/single_sample/00_main.yaml",
  other_variables = cfg_1
)
}

\dontrun{
pipeline_config <- load_pipeline_config()
pipeline_config_other <- load_pipeline_config("some/other/dir/config.yaml")
}

\dontrun{
single_sample_config <- load_single_sample_configs()
single_sample_config_other <- load_single_sample_configs("some/other/dir")
}

\dontrun{
integration_config <- load_integration_configs()
single_sample_config_other <- load_integration_configs("some/other/dir")
}

}
\concept{load_config}
