% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz.R
\name{get_scdrake_default_options}
\alias{get_scdrake_default_options}
\alias{get_scdrake_options}
\title{Options used by \code{scdrake}.}
\usage{
get_scdrake_default_options()

get_scdrake_options()
}
\value{
A named list of options.
}
\description{
\code{get_scdrake_default_options()} returns a list of default \code{scdrake} options passed to
\code{options()} during the package load.

\code{get_scdrake_options()} returns a list of options currently used by \code{scdrake}
(their names begin with \code{"scdrake_"}).
}
\details{
Most of the options are obtained from environment variables named in UPPERCASE,
e.g. the value of \code{scdrake_verbose} is taken from \code{SCDRAKE_VERBOSE}.
The environment variables are coerced to atomic types (character, logical, integer, double).

The following options are used by \code{scdrake}:
\itemize{
\item \code{scdrake_yq_binary}
(character, default: \code{Sys.which("yq")})
\itemize{
\item A path to \code{yq} tool's binary.
}
\item \code{scdrake_verbose}
(logical, env: \code{SCDRAKE_VERBOSE}, default: \code{TRUE})
\itemize{
\item If \code{TRUE}, \code{scdrake} will be verbose.
}
\item \code{scdrake_cache_dir}
(character, env: \code{SCDRAKE_CACHE_DIR}, default: \code{".drake"})
\itemize{
\item A path to \code{drake} cache directory.
The \code{drake} package also contains an RStudio addin, which has a shortcut for loading a target under cursor
(see \verb{Tools -> Modify Keyboard Shortcuts -> "loadd target under cursor"}).
To know which cache directory to use for loading, \code{drake} is using the \code{rstudio_drake_cache} option.
On its load or attach, \code{scdrake} will automatically set this option to \code{scdrake_cache_dir}.
Just keep in mind that \code{rstudio_drake_cache} option will be overwritten if you load the \code{drake} package.
}
\item \code{scdrake_pipeline_config_dir}
(character, env: \code{SCDRAKE_PIPELINE_CONFIG_DIR}, default: \code{"config"})
\itemize{
\item A path to directory containing \code{pipeline.default.yaml} and/or \code{pipeline.yaml} files.
}
\item \code{scdrake_single_sample_config_dir}
(character, env: \code{SCDRAKE_SINGLE_SAMPLE_CONFIG_DIR}, default: \code{"config/single_sample"})
\itemize{
\item A path to directory containing files for single-sample analysis,
see the \code{dir} parameter in \code{\link[=load_single_sample_configs]{load_single_sample_configs()}}.
}
\item \code{scdrake_integration_config_dir}
(character, env: \code{SCDRAKE_INTEGRATION_CONFIG_DIR}, default: \code{"config/integration"})
\itemize{
\item A path to directory containing files for integration analysis,
see the \code{dir} parameter in \code{\link[=load_integration_configs]{load_integration_configs()}}.
}
}

Some of the options are internal, used for unit tests:
\itemize{
\item \code{scdrake_test_download_yq}
(logical, env: \code{SCDRAKE_TEST_DOWNLOAD_YQ}, default: \code{FALSE})
\itemize{
\item If \code{TRUE}, run tests for \code{yq} tool (\code{test-yq.R}).
}
\item \code{scdrake_test_run_pipeline}
(logical, env: \code{SCDRAKE_TEST_RUN_PIPELINE}, default: \code{FALSE})
\itemize{
\item If \code{TRUE}, run pipeline tests (\code{test-run_pipeline.R}).
Note that configs will be slightly adjusted compared to the default ones to speedup the computations.
}
\item \code{scdrake_test_run_pipeline_base_out_dir}
(character, env: \code{SCDRAKE_TEST_RUN_PIPELINE_BASE_OUT_DIR},
default: \code{fs::file_temp("scdrake_test_project_") \%>\% fs::path_abs() \%>\% as.character()}):
\itemize{
\item Base output directory for pipeline tests.
}
\item \code{scdrake_test_run_pipeline_single_sample_full}
(logical, env: \code{SCDRAKE_TEST_RUN_PIPELINE_SINGLE_SAMPLE_FULL}, default: \code{FALSE})
\item \code{scdrake_test_run_pipeline_integration}
\itemize{
\item If \code{TRUE}, run all targets of the single-sample pipeline for PBMC 1k dataset.
(logical, env: \code{SCDRAKE_TEST_RUN_PIPELINE_INTEGRATION}, default: \code{FALSE}):
\item If \code{TRUE}, run a shortened single-sample pipeline (target \code{sce_final_norm_clustering})
for a second sample (PBMC 3k), followed by the integration pipeline.
}
\item \code{scdrake_test_run_pipeline_keep_files}
(logical, env: \code{SCDRAKE_TEST_RUN_PIPELINE_KEEP_FILES}, default: \code{TRUE}):
\itemize{
\item If \code{TRUE}, keep files created by pipeline tests.
This is useful for reporting output of the current \code{scdrake} version.
}
}
}
\concept{scdrake_options}
