% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_annotation.R
\name{cell_annotation_fn}
\alias{cell_annotation_fn}
\title{Perform cell annotation via \code{SingleR::SingleR()}.}
\usage{
cell_annotation_fn(
  cell_annotation_params,
  sce_test,
  BPPARAM = BiocParallel::SerialParam()
)
}
\arguments{
\item{cell_annotation_params}{(\emph{input target}) A \code{tibble}.}

\item{sce_test}{(\emph{input target}) A \code{SingleCellExperiment} object to predict cell labels in.}

\item{BPPARAM}{A \link[BiocParallel:BiocParallelParam-class]{BiocParallel::BiocParallelParam} object.}
}
\value{
A \code{tibble}. \emph{Output target}: \code{cell_annotation}
}
\description{
A new list column \code{cell_annotation} is added to \code{cell_annotation_params}, containing the returned
\code{DataFrame}s (one for each reference dataset) from \code{SingleR::SingleR()}.

\code{train_params} and \code{classify_params} in \code{cell_annotation_params} are passed to \code{SingleR::SingleR()}, and internally
to \code{SingleR::trainSingleR()} and \code{SingleR::classifySingleR()}, respectively.

Label pruning is performed via \code{SingleR::pruneScores()} after calling \code{SingleR::SingleR()}, with parameters defined in
\code{cell_annotation_params$prune_score_params}.
}
\concept{sc_cell_annotation}
