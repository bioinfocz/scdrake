name: Docker Image CI

on:
  push:
    branches: [ 'docker-ci-test' ]
  pull_request:
    branches: [ 'docker-ci-test' ]
  release:
    types: [published]

env:
  IMAGE: jirinovo/scdrake-test
  TEST_TAG: test

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug
        run: |
          git status
          ls -al
          ls -al tests/testthat/_snaps/project.md
          echo "github.ref -> ${{ github.ref }}"
          echo "github.ref_type -> ${{ github.ref_type }}"
          echo "github.ref_name -> ${{ github.ref_name }}"
          echo "github.event.release.tag_name -> ${{ github.event.release.tag_name }}"
      - name: Get scdrake package version from DESCRIPTION
        run: |
          pkg_version=$(grep -P '^Version: \d+\.\d+\.\d+$' DESCRIPTION | cut -d' ' -f2)
          echo "pkg_version=$pkg_version" >> $GITHUB_ENV
          echo "scdrake package version: $pkg_version"
      - name: Check that tag matches package version in DESCRIPTION
        if: github.event_name == 'release'
        run: |
          echo "pkg_version: $pkg_version"
          test -n "$pkg_version" || (echo "'Version:' not found in DESCRIPTION" && false)
          test "v$pkg_version" == "${{ github.event.release.tag_name }}" \
            || (echo "'Version: $pkg_version' in DESCRIPTION does not match current git tag ('${{ github.event.release.tag_name }}')" && false)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and export test image to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            "SCDRAKE_VERSION=${{ env.pkg_version }}"
          load: true
          tags: ${{ env.IMAGE }}:${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Debug Docker
        run: |
          df -h
          docker buildx du
          docker images
      - name: Run test image
        run: |
          docker run -d \
            --name scdrake_test \
            -v $(pwd):/home/rstudio/scdrake_source \
            -e USERID=$(id -u) \
            -e GROUPID=$(id -g) \
            ${{ env.IMAGE }}:${{ env.TEST_TAG }}
      - name: Test image
        run: |
          docker exec -u rstudio -w /home/rstudio/scdrake_source scdrake_test \
            r --interactive -L /usr/local/lib/R/site-library -t dev/run_tests.R \
            --no-test-pipeline \
            --output-dir /home/rstudio/scdrake_test
      - name: Remove test image
        run: |
          docker stop scdrake_test
          docker rmi ${{ env.IMAGE }}:${{ env.TEST_TAG }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'docker-ci-test') }}
            type=semver,pattern={{version}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Rollback release
        if: github.event_name == 'release' && failure()
        uses: author/action-rollback@stable
        with:
          tag: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
